{"version":3,"sources":["components/Form/FormEditor.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.js","components/Form/FormEditor.js","components/Filter/Filter.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["module","exports","ContactList","contacts","onDeleteContacts","className","s","wrapper","list","map","id","name","number","item","text","type","btn","onClick","FormEditor","onSubmit","useState","setName","setNumber","handleChange","event","target","value","clearForm","e","preventDefault","form","title","htmlFor","pattern","required","onChange","input","Filter","label","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","initialContacts","setContacts","filter","setFilter","verifyNewContact","newName","verify","forEach","toLowerCase","alert","contact","uuidv4","prevState","currentTarget","nomalizedFilter","trim","includes","getVisibleContact","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74ce23e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FormEditor_title__1GAtv\",\"form\":\"FormEditor_form__1Aj1I\",\"btn\":\"FormEditor_btn__2ovZA\",\"input\":\"FormEditor_input__1ZmKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__21Fk-\",\"item\":\"ContactList_item__NMe53\",\"btn\":\"ContactList_btn__316hB\",\"text\":\"ContactList_text__1LeLK\",\"title\":\"ContactList_title__1Nwgl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__PPPan\",\"label\":\"Filter_label__3a2wU\"};","import React from 'react';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nconst ContactList = ({ contacts, onDeleteContacts }) => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <ul className={s.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id} className={s.item}>\r\n            <p className={s.text}>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              className={s.btn}\r\n              onClick={() => onDeleteContacts(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContacts: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import { useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FormEditor.module.css';\r\n\r\nexport default function FormEditor({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] =useState('');\r\nconst handleChange=event=>{\r\n  const{name, value}=event.target;\r\n  switch(name){\r\n    case 'name':\r\n      setName(value);\r\n      break;\r\n\r\n      case'number':\r\n      setNumber(value);\r\n      break;\r\n      default:\r\n        return;\r\n  }\r\n}\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    clearForm();\r\n  };\r\n  const clearForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.title} htmlFor=\"user-name\">\r\n        Name\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={handleChange}\r\n        value={name}\r\n        id=\"user-name\"\r\n        className={s.input}\r\n      />\r\n\r\n      <label className={s.title} htmlFor=\"user-number\">\r\n        Number\r\n      </label>\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        onChange={handleChange}\r\n        value={number}\r\n        id=\"user-number\"\r\n        className={s.input}\r\n      />\r\n\r\n      <button type=\"submit\" className={s.btn}>\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nFormEditor.propTypes={\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.label}>\r\n    Фильтр по имени\r\n    <input type=\"text\" value={value} onChange={onChange} className={s.input} />\r\n  </label>\r\n);\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import { useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './App.css';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport initialContacts from './components/ContactList/contacts.json';\r\nimport FormEditor from 'components/Form/FormEditor';\r\nimport Filter from 'components/Filter/Filter';\r\nimport { useLocalStorage } from 'hooks/useLocalStorage';\r\nexport default function App() {\r\n  const [contacts, setContacts] = useLocalStorage('contacts', initialContacts);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n    if (verifyNewContact(name)) {\r\n      setContacts(prevState => [contact, ...prevState]);\r\n    }\r\n  };\r\n  const verifyNewContact = newName => {\r\n    let verify = true;\r\n    contacts.forEach(({ name }) => {\r\n      if (name.toLowerCase() === newName.toLowerCase()) {\r\n        alert(`${name} is already in contacts`);\r\n        verify = false;\r\n      }\r\n    });\r\n    return verify;\r\n  };\r\n  const deleteContact = contactId => {\r\n    setContacts(contacts =>\r\n      contacts.filter(contact => contact.id !== contactId),\r\n    );\r\n  };\r\n  const changeFilter = e => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const getVisibleContact = () => {\r\n    const nomalizedFilter = filter.toLowerCase().trim();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(nomalizedFilter),\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h2 className=\"title\">Phonebook</h2>\r\n      <FormEditor onSubmit={addContact} />\r\n      <h2 className=\"title\">Contacts</h2>\r\n      <Filter onChange={changeFilter} value={filter} />\r\n      <ContactList\r\n        contacts={getVisibleContact()}\r\n        onDeleteContacts={deleteContact}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nconst useLocalStorage = (key, defaultValue) => {\r\n    const [state, setState] = useState(() => {\r\n        return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\r\n    })\r\n    useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(state))\r\n    }, [key, state]);\r\n    return [state, setState]\r\n};\r\nexport { useLocalStorage };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}